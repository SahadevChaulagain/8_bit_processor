$date
	Sun Jul 27 10:23:58 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module processor_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # zero_flag $end
$var wire 1 $ use_immediate $end
$var wire 8 % reg_write_data [7:0] $end
$var wire 1 & reg_write $end
$var wire 2 ' reg_sel [1:0] $end
$var wire 8 ( reg_data_out [7:0] $end
$var wire 8 ) reg2 [7:0] $end
$var wire 8 * reg1 [7:0] $end
$var wire 8 + reg0 [7:0] $end
$var wire 8 , operand2 [7:0] $end
$var wire 8 - operand1 [7:0] $end
$var wire 4 . opcode [3:0] $end
$var wire 1 / mem_write $end
$var wire 1 0 mem_read $end
$var wire 8 1 mem_data_out [7:0] $end
$var wire 1 2 is_store_imm $end
$var wire 1 3 is_store $end
$var wire 1 4 is_mov $end
$var wire 20 5 instruction [19:0] $end
$var wire 1 6 carry_flag $end
$var wire 8 7 alu_result [7:0] $end
$var wire 8 8 alu_op2 [7:0] $end
$var wire 1 9 alu_enable $end
$var wire 1 : acc_write $end
$var parameter 3 ; DECODE $end
$var parameter 3 < EXECUTE $end
$var parameter 3 = FETCH $end
$var parameter 3 > WRITEBACK $end
$var reg 8 ? accumulator [7:0] $end
$var reg 20 @ instruction_reg [19:0] $end
$var reg 4 A pc [3:0] $end
$var reg 3 B state [2:0] $end
$scope module alu_unit $end
$var wire 8 C op1 [7:0] $end
$var wire 8 D op2 [7:0] $end
$var wire 4 E opcode [3:0] $end
$var reg 1 6 carry_flag $end
$var reg 8 F result [7:0] $end
$var reg 1 # zero_flag $end
$upscope $end
$scope module cu $end
$var wire 4 G opcode [3:0] $end
$var reg 1 : acc_write $end
$var reg 1 9 alu_enable $end
$var reg 1 4 is_mov $end
$var reg 1 3 is_store $end
$var reg 1 2 is_store_imm $end
$var reg 1 0 mem_read $end
$var reg 1 / mem_write $end
$var reg 1 & reg_write $end
$var reg 1 $ use_immediate $end
$upscope $end
$scope module dec $end
$var wire 20 H instruction [19:0] $end
$var wire 8 I operand2 [7:0] $end
$var wire 8 J operand1 [7:0] $end
$var wire 4 K opcode [3:0] $end
$upscope $end
$scope module dm $end
$var wire 8 L addr [7:0] $end
$var wire 1 ! clk $end
$var wire 1 0 mem_read $end
$var wire 1 / mem_write $end
$var wire 8 M write_data [7:0] $end
$var reg 8 N read_data [7:0] $end
$upscope $end
$scope module pm $end
$var wire 4 O addr [3:0] $end
$var reg 20 P instruction [19:0] $end
$upscope $end
$scope module rf $end
$var wire 1 ! clk $end
$var wire 8 Q data_in [7:0] $end
$var wire 2 R reg_sel [1:0] $end
$var wire 1 S reg_write $end
$var reg 8 T reg0 [7:0] $end
$var reg 8 U reg1 [7:0] $end
$var reg 8 V reg2 [7:0] $end
$var reg 8 W selected_out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 >
b0 =
b10 <
b1 ;
$end
#0
$dumpvars
bx W
bx V
bx U
bx T
0S
b0 R
bx Q
b10000000000000001010 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
bx F
b0 E
bx D
b0 C
b0 B
b0 A
b0 @
b0 ?
1:
19
bx 8
bx 7
x6
b10000000000000001010 5
04
03
02
b0 1
00
0/
b0 .
b0 -
b0 ,
bx +
bx *
bx )
bx (
b0 '
0&
bx %
0$
x#
1"
0!
$end
#5000
1!
#10000
0!
0"
#15000
b0 8
b0 D
b1010 %
b1010 Q
1#
b0 7
b0 F
06
1$
1&
14
0:
09
b1000 .
b1000 E
b1000 G
b1000 K
b1010 ,
b1010 I
b1 B
b10000000000000001010 @
b10000000000000001010 H
1!
#20000
0!
#25000
b10 B
1!
#30000
0!
#35000
1S
b11 B
1!
#40000
0!
#45000
b1010 (
b1010 W
0S
b10000000000100001100 5
b10000000000100001100 P
b1010 +
b1010 T
b0 B
b1 A
b1 O
1!
#50000
0!
#55000
bx (
bx W
b1 8
b1 D
b1 '
b1 R
b1100 %
b1100 Q
b1 -
b1 J
b1 L
b1100 ,
b1100 I
b1 B
b10000000000100001100 @
b10000000000100001100 H
1!
#60000
0!
#65000
b10 B
1!
#70000
0!
#75000
1S
b11 B
1!
#80000
0!
#85000
b1100 (
b1100 W
0S
b0 5
b0 P
b1100 *
b1100 U
b0 B
b10 A
b10 O
1!
#90000
0!
#95000
0#
b1010 7
b1010 F
b1010 (
b1010 W
1:
19
0$
04
0&
b1010 8
b1010 D
b0 '
b0 R
b1010 %
b1010 Q
b0 .
b0 E
b0 G
b0 K
b0 -
b0 J
b0 L
b0 ,
b0 I
b1 B
b0 @
b0 H
1!
#100000
0!
#105000
b10 B
1!
#110000
0!
#115000
b10100 %
b10100 Q
b1010 M
b10100 7
b10100 F
b11 B
b1010 ?
b1010 C
1!
#120000
0!
#125000
b1100000010100000000 5
b1100000010100000000 P
b0 B
b11 A
b11 O
1!
#130000
0!
#135000
b1111 %
b1111 Q
b101 8
b101 D
b1100 (
b1100 W
b1111 7
b1111 F
1$
1:
19
b1 '
b1 R
b110 .
b110 E
b110 G
b110 K
b101 -
b101 J
b101 L
b1 B
b1100000010100000000 @
b1100000010100000000 H
1!
#140000
0!
#145000
b10 B
1!
#150000
0!
#155000
b10100 %
b10100 Q
b1111 M
b10100 7
b10100 F
b11 B
b1111 ?
b1111 C
1!
#160000
0!
#165000
b10010001010000001110 5
b10010001010000001110 P
b0 B
b100 A
b100 O
1!
#170000
0!
#175000
b0 %
b0 Q
b1110 M
b1010 (
b1010 W
1#
b0 7
b0 F
1/
12
0$
0:
09
b1010 8
b1010 D
b0 '
b0 R
b1001 .
b1001 E
b1001 G
b1001 K
b10100 -
b10100 J
b10100 L
b1110 ,
b1110 I
b1 B
b10010001010000001110 @
b10010001010000001110 H
1!
#180000
0!
#185000
b10 B
1!
#190000
0!
#195000
b11 B
1!
#200000
0!
#205000
b1110001010000000000 5
b1110001010000000000 P
b0 B
b101 A
b101 O
1!
#210000
0!
#215000
b1110 1
b1110 N
1:
10
02
0/
b1111 M
b111 .
b111 E
b111 G
b111 K
b0 ,
b0 I
b1 B
b1110001010000000000 @
b1110001010000000000 H
1!
#220000
0!
#225000
b10 B
1!
#230000
0!
#235000
b11 B
1!
#240000
0!
#245000
b10000001010100000010 5
b10000001010100000010 P
b1110 M
b0 B
b110 A
b110 O
b1110 ?
b1110 C
1!
#250000
0!
#255000
b10101 8
b10101 D
b10 %
b10 Q
b1100 (
b1100 W
1$
1&
14
00
0:
b1 '
b1 R
b0 1
b0 N
b1000 .
b1000 E
b1000 G
b1000 K
b10101 -
b10101 J
b10101 L
b10 ,
b10 I
b1 B
b10000001010100000010 @
b10000001010100000010 H
1!
#260000
0!
#265000
b10 B
1!
#270000
0!
#275000
1S
b11 B
1!
#280000
0!
#285000
b10 (
b10 W
0S
bx 5
bx P
b10 *
b10 U
b0 B
b111 A
b111 O
1!
#290000
0!
#295000
b0 (
b0 W
0$
04
0&
b0 8
b0 D
bx '
bx R
b0 %
b0 Q
bx .
bx E
bx G
bx K
bx -
bx J
bx L
bx ,
bx I
b1 B
bx @
bx H
1!
#300000
0!
#305000
b10 B
1!
#310000
0!
